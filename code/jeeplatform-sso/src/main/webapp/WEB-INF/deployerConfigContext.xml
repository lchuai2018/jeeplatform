<!--<?xml version="1.0" encoding="UTF-8"?>-->
<!--<beans xmlns="http://www.springframework.org/schema/beans"-->
<!--       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"-->
<!--       xmlns:context="http://www.springframework.org/schema/context"-->
<!--       xmlns:p="http://www.springframework.org/schema/p"-->
<!--       xmlns:c="http://www.springframework.org/schema/c"-->
<!--       xmlns:aop="http://www.springframework.org/schema/aop"-->
<!--       xmlns:tx="http://www.springframework.org/schema/tx"-->
<!--       xmlns:util="http://www.springframework.org/schema/util"-->
<!--       xmlns:sec="http://www.springframework.org/schema/security"-->
<!--       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd-->
<!--       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd-->
<!--       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd-->
<!--       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd-->
<!--       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd-->
<!--       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">-->

<!--    &lt;!&ndash; 对密码进行加密 &ndash;&gt;-->
<!--   &lt;!&ndash; <bean id="passwordEncoder" class="org.jasig.cas.authentication.handler.DefaultPasswordEncoder">-->
<!--        <constructor-arg value="MD5"></constructor-arg>-->
<!--        <property name="characterEncoding" value="UTF-8"></property>-->
<!--    </bean>&ndash;&gt;-->

<!--    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">-->
<!--        <property name="url" value="${platform.jdbc.jdbcUrl}"/>-->
<!--        <property name="username" value="${platform.jdbc.username}"/>-->
<!--        <property name="password" value="${platform.jdbc.password}"/>-->
<!--        <property name="initialSize" value="${platform.jdbc.initialSize}"/>-->
<!--        <property name="minIdle" value="${platform.jdbc.minIdle}"/>-->
<!--        <property name="maxActive" value="${platform.jdbc.maxActive}"/>-->
<!--        <property name="maxWait" value="60000"/>-->
<!--        &lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
<!--        <property name="timeBetweenEvictionRunsMillis" value="60000"/>-->
<!--        &lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
<!--        <property name="minEvictableIdleTimeMillis" value="300000"/>-->
<!--        <property name="validationQuery" value="SELECT 1"/>-->
<!--        <property name="testWhileIdle" value="true"/>-->
<!--        <property name="testOnBorrow" value="false"/>-->
<!--        <property name="testOnReturn" value="false"/>-->
<!--        &lt;!&ndash; 打开removeAbandoned功能 &ndash;&gt;-->
<!--        <property name="removeAbandoned" value="true"/>-->
<!--        <property name="removeAbandonedTimeout" value="1800"/>-->
<!--        &lt;!&ndash; 1800秒，也就是30分钟 &ndash;&gt;-->
<!--        <property name="logAbandoned" value="true"/>-->
<!--        &lt;!&ndash; 打开PSCache，并且指定每个连接上PSCache的大小,mysql 不使用 &ndash;&gt;-->
<!--        <property name="poolPreparedStatements" value="false"/>-->
<!--        <property name="filters" value="config" />-->
<!--        &lt;!&ndash;<property name="connectionProperties" value="config.decrypt=true;config.decrypt.key=${platform.jdbc.publickey};druid.stat.slowSqlMillis=200;druid.stat.logSlowSql=true"/>&ndash;&gt;-->
<!--    </bean>-->

<!--    &lt;!&ndash; 认证控制器 &ndash;&gt;-->
<!--    <bean id="queryDatabaseAuthenticationHandler" name="primaryAuthenticationHandler" class="org.jasig.cas.adaptors.jdbc.QueryDatabaseAuthenticationHandler">-->
<!--        &lt;!&ndash;<property name="passwordEncoder" ref="passwordEncoder" />&ndash;&gt;-->
<!--        <property name="dataSource" ref="dataSource" />-->
<!--        &lt;!&ndash; 通过用户名查询密码的SQL &ndash;&gt;-->
<!--        <property name="sql" value="select password from sys_user where username =?" />-->
<!--    </bean>-->

<!--    <util:map id="authenticationHandlersResolvers">-->
<!--        <entry key-ref="proxyAuthenticationHandler" value-ref="proxyPrincipalResolver" />-->
<!--        &lt;!&ndash;<entry key-ref="primaryAuthenticationHandler" value-ref="primaryPrincipalResolver" />&ndash;&gt;-->
<!--        <entry key-ref="queryDatabaseAuthenticationHandler" value-ref="primaryPrincipalResolver" />-->
<!--        &lt;!&ndash;<entry key-ref="costomUsernamePasswordAuthentication" value-ref="primaryPrincipalResolver" />&ndash;&gt;-->
<!--    </util:map>-->

<!--    <util:list id="authenticationMetadataPopulators">-->
<!--        <ref bean="successfulHandlerMetaDataPopulator" />-->
<!--        <ref bean="rememberMeAuthenticationMetaDataPopulator" />-->
<!--    </util:list>-->

<!--    <bean id="attributeRepository" class="org.jasig.services.persondir.support.NamedStubPersonAttributeDao"-->
<!--          p:backingMap-ref="attrRepoBackingMap" />-->

<!--    <alias name="acceptUsersAuthenticationHandler" alias="primaryAuthenticationHandler" />-->
<!--    <alias name="personDirectoryPrincipalResolver" alias="primaryPrincipalResolver" />-->

<!--    <util:map id="attrRepoBackingMap">-->
<!--        <entry key="uid" value="uid" />-->
<!--        <entry key="eduPersonAffiliation" value="eduPersonAffiliation" />-->
<!--        <entry key="groupMembership" value="groupMembership" />-->
<!--        <entry>-->
<!--            <key><value>memberOf</value></key>-->
<!--            <list>-->
<!--                <value>faculty</value>-->
<!--                <value>staff</value>-->
<!--                <value>org</value>-->
<!--            </list>-->
<!--        </entry>-->
<!--    </util:map>-->

<!--    <alias name="serviceThemeResolver" alias="themeResolver" />-->

<!--    <alias name="jsonServiceRegistryDao" alias="serviceRegistryDao" />-->

<!--    &lt;!&ndash; 先注释默认的ticket Registry&ndash;&gt;-->
<!--    &lt;!&ndash;<alias name="defaultTicketRegistry" alias="ticketRegistry" />&ndash;&gt;-->

<!--    &lt;!&ndash; Redis相关配置 &ndash;&gt;-->
<!--    <alias name="redisTicketRegistry" alias="ticketRegistry"/>-->
<!--    <bean id="redisTicketRegistry" class="ren.boot.cas.ticket.registry.RedisTicketRegistry"-->
<!--          p:client-ref="ticketRedisTemplate"-->
<!--          p:tgtTimeout="${tgt.maxTimeToLiveInSeconds}"-->
<!--          p:stTimeout="${st.timeToKillInSeconds}"/>-->
<!--    &lt;!&ndash; redis连接池 &ndash;&gt;-->
<!--    <bean id="jedisConnFactory"-->
<!--          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"-->
<!--          p:hostName="${redis.hostName}"-->
<!--          p:database="${redis.database}"-->
<!--          p:password="${redis.password}"-->
<!--          p:port="${redis.port}"-->
<!--          p:usePool="true"/>-->
<!--    <bean id="ticketRedisTemplate" class="ren.boot.cas.ticket.registry.TicketRedisTemplate"-->
<!--          p:connectionFactory-ref="jedisConnFactory"/>-->

<!--    <alias name="ticketGrantingTicketExpirationPolicy" alias="grantingTicketExpirationPolicy" />-->
<!--    <alias name="multiTimeUseOrTimeoutExpirationPolicy" alias="serviceTicketExpirationPolicy" />-->

<!--    <alias name="anyAuthenticationPolicy" alias="authenticationPolicy" />-->
<!--    <alias name="acceptAnyAuthenticationPolicyFactory" alias="authenticationPolicyFactory" />-->

<!--    <bean id="auditTrailManager"-->
<!--          class="org.jasig.inspektr.audit.support.Slf4jLoggingAuditTrailManager"-->
<!--          p:entrySeparator="${cas.audit.singleline.separator:|}"-->
<!--          p:useSingleLine="${cas.audit.singleline:false}"/>-->

<!--    <alias name="neverThrottle" alias="authenticationThrottle" />-->

<!--    <util:list id="monitorsList">-->
<!--        <ref bean="memoryMonitor" />-->
<!--        <ref bean="sessionMonitor" />-->
<!--    </util:list>-->

<!--    <alias name="defaultPrincipalFactory" alias="principalFactory" />-->
<!--    <alias name="defaultAuthenticationTransactionManager" alias="authenticationTransactionManager" />-->
<!--    <alias name="defaultPrincipalElectionStrategy" alias="principalElectionStrategy" />-->
<!--    <alias name="tgcCipherExecutor" alias="defaultCookieCipherExecutor" />-->
<!--</beans>-->
